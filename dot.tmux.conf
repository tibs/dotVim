# tmux configuration
# ==================
#
# The default configuration appears to be as follows (nb: the command was
# run with no ~/.tmux.conf file):
#
#tibbs@bladefvx-e-bl16[zzz94]:~$ tmux show -g
# assume-paste-time 1
# base-index 0
# bell-action any
# bell-on-alert off
# default-command ""
# default-shell "/bin/bash"
# destroy-unattached off
# detach-on-destroy on
# display-panes-active-colour red
# display-panes-colour blue
# display-panes-time 1000
# display-time 750
# history-limit 2000
# key-table "root"
# lock-after-time 0
# lock-command "lock -np"
# message-command-style fg=yellow,bg=black
# message-style fg=black,bg=yellow
# mouse off
# prefix C-b
# prefix2 None
# renumber-windows off
# repeat-time 500
# set-remain-on-exit off
# set-titles off
# set-titles-string "#S:#I:#W - "#T" #{session_alerts}"
# status on
# status-interval 15
# status-justify left
# status-keys vi
# status-left "[#S] "
# status-left-length 10
# status-left-style default
# status-position bottom
# status-right " "#{=21:pane_title}" %H:%M %d-%b-%y"
# status-right-length 40
# status-right-style default
# status-style fg=black,bg=green
# update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"
# visual-activity off
# visual-bell off
# visual-silence off
# word-separators " -_@"
#
# and
#
# tibbs@bladefvx-e-bl16[zzz94]:~$ tmux show -s
# buffer-limit 20
# default-terminal "screen"
# escape-time 500
# exit-unattached off
# focus-events off
# history-file ""
# message-limit 100
# quiet off
# set-clipboard on
# terminal-overrides "xterm*:XT:Ms=\E]52;%p1%s;%p2%s\007:Cs=\E]12;%p1%s\007:Cr=\E]112\007:Ss=\E[%p1%d q:Se=\E[2 q,screen*:XT"
#
# Vim keys configuration
# ======================
# -----------------------------------------------------------------------
# Start of /usr/share/doc/tmux/examples/vim-keys.conf 
# -----------------------------------------------------------------------
# $Id: vim-keys.conf,v 1.2 2010-09-18 09:36:15 nicm Exp $
#
# vim-keys.conf, v1.2 2010/09/12
#
# By Daniel Thau.  Public domain.
#
# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi
# -----------------------------------------------------------------------
# End of /usr/share/doc/tmux/examples/vim-keys.conf 
# -----------------------------------------------------------------------
#
# Another idea for how to split windows
bind | split-window -h
bind - split-window -v
# and remove the original/default bindings
unbind '"'
unbind %

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Taken from http://stackoverflow.com/a/40902312
# (and let's hope tmux never has a version called 2.10 !)
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Version-specific commands [grumble, grumble]
# See: https://github.com/tmux/tmux/blob/master/CHANGES
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' \
  "set -g mouse-select-pane on; set -g mode-mouse on; \
    set -g mouse-resize-pane on; set -g mouse-select-window on"

# In version 2.1 "mouse" replaced the previous 4 mouse options
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
  "set -g mouse on"

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
  "set -g utf8 on; set -g status-utf8 on; set -g mouse-utf8 on"
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Apparently this is probably sensible?
# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*.
setw -g aggressive-resize on

# After reading Brian P. Hogan's tmux book
# ========================================
# Set the window and pane start index to 1, instead of 0
# Pro: moving to 0 is common, but it's a long way away
# Con: an unobvious change (but common, and the number shows in the status bar)
set  -g base-index 1
setw -g pane-base-index 1

# Reduce the delay between <prefix> and command (but don't go as far as '0')
set  -s escape-time 1

# At least whilst I'm still learning/playing, reload this configuration with
# <prefix> r
bind r source-file ~/.tmux.conf \; display "Reloaded tmux.conf"

# Assume our terminal supports 256 colours
set  -g default-terminal "screen-256color"

# Enable activity alerts (i.e., make it more obvious when a pane's content
# changes when we're not looking at it)
setw -g monitor-activity on
set  -g visual-activity on

# Log output to a text file
# Note that "<prefix> P" followed by "ls" will log the command as requested,
# but if "ls" was using VT100 escape sequences to colour its output, then
# those escape sequences will also be copied, which can be confusing! On the
# other hand, it *is* doing what it is told to do...
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# Shortcut to toggle synchronize-panes
#bind C-s set-window-option synchronize-panes

# His alternatives for pane management are:
#
#bind | split-window -h
#bind - split-window -v
#
#bind h select-pane  -L
#bind j select-pane  -D
#bind k select-pane  -U
#bind l select-pane  -R
#
#bind -r C-h select-window -t :-
#bind -r C-l select-window -t :+
#
#bind H resize-pane -L 5
#bind J resize-pane -D 5
#bind L resize-pane -R 5
#bind K resize-pane -U 5

# Status line
# ===========
set -g status-left-length 20
# Unfortunately, we only seem to be able to set status-right-length to a
# literal integer, not something we've computed. So let's set it to something
# "quite big", and rely on setting the actual content to something that won't
# be too large...
set -g status-right-length 200
set -g status-right "#{=100:pane_title}"

# Experimental status line colours
# The documentation on this isn't too good, so one has to go to the internet,
# where it doesn't help that a lot of the examples are from people who like
# black terminals with white test. Also, some of the commands to use to set
# the status line appear to have changed over time.
# However, see, for instance,
#    http://superuser.com/questions/628602/tmux-set-color-of-changed-window
#    http://www.deanbodenham.com/learn/tmux-conf-file.html

set-window-option -g status-left "#S "
set-window-option -g status-left-fg black
set-window-option -g status-left-bg white

set-window-option -g window-status-format " #I: #W "
set-window-option -g window-status-attr dim
set-window-option -g window-status-bg green
set-window-option -g window-status-fg black

set-window-option -g window-status-current-format " #I: #W "
set-window-option -g window-status-current-attr bold
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-bg yellow

set-window-option -g window-status-activity-attr bold
set-window-option -g window-status-activity-fg cyan
set-window-option -g window-status-activity-bg green

set-window-option -g status-right-fg black
set-window-option -g status-right-bg white

setw -g monitor-activity on
set -g visual-activity on

# vim: set tabstop=8 softtabstop=4 shiftwidth=4 expandtab:
