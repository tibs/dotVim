### tmux configuration
### ==================
###
### Allow this file to be run as a weird shell script...
# cat << END_OF_TMUX_CONFIG /dev/null
#
# Vim keys configuration
# ======================
# -----------------------------------------------------------------------
# Start of /usr/share/doc/tmux/examples/vim-keys.conf 
# -----------------------------------------------------------------------
# $Id: vim-keys.conf,v 1.2 2010-09-18 09:36:15 nicm Exp $
#
# vim-keys.conf, v1.2 2010/09/12
#
# By Daniel Thau.  Public domain.
#
# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi
# -----------------------------------------------------------------------
# End of /usr/share/doc/tmux/examples/vim-keys.conf 
# -----------------------------------------------------------------------

# Mouse support
set  -g mouse-resize-pane on
set  -g mouse-select-pane on
set  -g mouse-select-window on

setw -g mode-mouse on

# Apparently this is probably sensible?
# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*.
setw -g aggressive-resize on

# After reading Brian P. Hogan's tmux book
# ========================================
# Set the window and pane start index to 1, instead of 0
# Pro: moving to 0 is common, but it's a long way away
# Con: an unobvious change (but common, and the number shows in the status bar)
set  -g base-index 1
setw -g pane-base-index 1

# Reduce the delay between <prefix> and command (but don't go as far as '0')
set  -s escape-time 1

# At least whilst I'm still learning/playing, reload this configuration with
# <prefix> r
bind r source-file ~/.tmux.conf \; display "Reloaded tmux.conf"

# Assume our terminal supports 256 colours
set  -g default-terminal "screen-256color"

# Enable activity alerts (i.e., make it more obvious when a pane's content
# changes when we're not looking at it)
setw -g monitor-activity on
set  -g visual-activity on

# Use UTF8 - it probably makes sense
set  -g utf8
setw -g utf8 on

# Log output to a text file
# Note that "<prefix> P" followed by "ls" will log the command as requested,
# but if "ls" was using VT100 escape sequences to colour its output, then
# those escape sequences will also be copied, which can be confusing! On the
# other hand, it *is* doing what it is told to do...
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# Shortcut to toggle synchronize-panes
#bind C-s set-window-option synchronize-panes

# His alternatives for pane management are:
#
#bind | split-window -h
#bind - split-window -v
#
#bind h select-pane  -L
#bind j select-pane  -D
#bind k select-pane  -U
#bind l select-pane  -R
#
#bind -r C-h select-window -t :-
#bind -r C-l select-window -t :+
#
#bind H resize-pane -L 5
#bind J resize-pane -D 5
#bind L resize-pane -R 5
#bind K resize-pane -U 5

# Status line
# ===========
#set -g status-right-length "#(cut -c3- ~/.tmux.conf | sh -s one_third_width)"
#set -g status-right "#T"
# Unfortunately, we only seem to be able to set status-right-length to a
# literal integer, not something we've computed. So let's set it to something
# "quite big", and rely on setting the actual content to something that won't
# be too large...
set -g status-right-length 200
set -g status-right "#(cut -c3- ~/.tmux.conf | sh -s status_right_text)"
#
# END_OF_TMUX_CONFIG
### Text here is shell script providing useful functions...
#
# status_right_text() {
#     numcols=$(tput cols)
#     # Only use up to 1/2 of the width of the terminal
#     let fraction=numcols/2
#     if [ $fraction -gt 200 ]; then
#          fraction = 200
#     fi
#     echo "#{=${fraction}:pane_title}"
# }
#
### And run whatever is given as our argument...
# $@
# 
### vim: set tabstop=8 softtabstop=4 shiftwidth=4 expandtab:
